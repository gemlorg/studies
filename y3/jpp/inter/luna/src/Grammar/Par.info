-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Grammar/Par.y
-----------------------------------------------------------------------------

state 118 contains 1 shift/reduce conflicts.

rule 30 is unused
rule 31 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Arg -> Ident ':' Type                              (5)
	Arg -> 'var' Ident ':' Type                        (6)
	ListArg ->                                         (7)
	ListArg -> Arg                                     (8)
	ListArg -> Arg ',' ListArg                         (9)
	Block -> '{' ListStmt '}'                          (10)
	ListStmt ->                                        (11)
	ListStmt -> Stmt ListStmt                          (12)
	Stmt -> ';'                                        (13)
	Stmt -> Block                                      (14)
	Stmt -> DeclKind                                   (15)
	Stmt -> Ident '=' Expr ';'                         (16)
	Stmt -> Ident '++' ';'                             (17)
	Stmt -> Ident '--' ';'                             (18)
	Stmt -> 'return' Expr ';'                          (19)
	Stmt -> 'return' ';'                               (20)
	Stmt -> 'if' '(' Expr ')' Stmt                     (21)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (22)
	Stmt -> 'while' '(' Expr ')' Stmt                  (23)
	Stmt -> 'for' '(' Stmt ';' Expr ';' Stmt ')' Block   (24)
	Stmt -> Expr ';'                                   (25)
	DeclKind -> 'var' Ident ':' Type Item ';'          (26)
	DeclKind -> 'fn' Ident '(' ListArg ')' '->' Type Block   (27)
	Item -> '=' Expr                                   (28)
	Item ->                                            (29)
	ListItem -> Item                                   (30)
	ListItem -> Item ',' ListItem                      (31)
	Type -> 'nil'                                      (32)
	Type -> 'bool'                                     (33)
	Type -> 'int'                                      (34)
	Type -> 'string'                                   (35)
	Type -> 'any'                                      (36)
	Type -> 'fn' '(' ListType ')' '->' Type            (37)
	ListType ->                                        (38)
	ListType -> Type                                   (39)
	ListType -> Type ',' ListType                      (40)
	Expr6 -> Ident                                     (41)
	Expr6 -> Integer                                   (42)
	Expr6 -> 'true'                                    (43)
	Expr6 -> 'false'                                   (44)
	Expr6 -> 'nil'                                     (45)
	Expr6 -> 'any'                                     (46)
	Expr6 -> Ident '(' ListExpr ')'                    (47)
	Expr6 -> String                                    (48)
	Expr6 -> '(' Expr ')'                              (49)
	Expr5 -> '-' Expr6                                 (50)
	Expr5 -> 'not' Expr6                               (51)
	Expr5 -> Expr6                                     (52)
	Expr4 -> Expr4 MulOp Expr5                         (53)
	Expr4 -> Expr5                                     (54)
	Expr3 -> Expr3 AddOp Expr4                         (55)
	Expr3 -> Expr4                                     (56)
	Expr2 -> Expr2 RelOp Expr3                         (57)
	Expr2 -> Expr3                                     (58)
	Expr1 -> Expr2 'and' Expr1                         (59)
	Expr1 -> Expr2                                     (60)
	Expr -> Expr1 'or' Expr                            (61)
	Expr -> 'fn' '(' ListArg ')' '=>' Type Block       (62)
	Expr -> Expr1                                      (63)
	ListExpr ->                                        (64)
	ListExpr -> Expr                                   (65)
	ListExpr -> Expr ',' ListExpr                      (66)
	AddOp -> '+'                                       (67)
	AddOp -> '-'                                       (68)
	MulOp -> '*'                                       (69)
	MulOp -> '/'                                       (70)
	MulOp -> '%'                                       (71)
	RelOp -> '<'                                       (72)
	RelOp -> '<='                                      (73)
	RelOp -> '>'                                       (74)
	RelOp -> '>='                                      (75)
	RelOp -> '=='                                      (76)
	RelOp -> '!='                                      (77)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	'++'           { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'--'           { PT _ (TS _ 10) }
	'->'           { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	':'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'=>'           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'and'          { PT _ (TS _ 22) }
	'any'          { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'fn'           { PT _ (TS _ 27) }
	'for'          { PT _ (TS _ 28) }
	'if'           { PT _ (TS _ 29) }
	'int'          { PT _ (TS _ 30) }
	'nil'          { PT _ (TS _ 31) }
	'not'          { PT _ (TS _ 32) }
	'or'           { PT _ (TS _ 33) }
	'return'       { PT _ (TS _ 34) }
	'string'       { PT _ (TS _ 35) }
	'true'         { PT _ (TS _ 36) }
	'var'          { PT _ (TS _ 37) }
	'while'        { PT _ (TS _ 38) }
	'{'            { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Arg             rules 5, 6
	ListArg         rules 7, 8, 9
	Block           rule  10
	ListStmt        rules 11, 12
	Stmt            rules 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	DeclKind        rules 26, 27
	Item            rules 28, 29
	ListItem        rules 30, 31
	Type            rules 32, 33, 34, 35, 36, 37
	ListType        rules 38, 39, 40
	Expr6           rules 41, 42, 43, 44, 45, 46, 47, 48, 49
	Expr5           rules 50, 51, 52
	Expr4           rules 53, 54
	Expr3           rules 55, 56
	Expr2           rules 57, 58
	Expr1           rules 59, 60
	Expr            rules 61, 62, 63
	ListExpr        rules 64, 65, 66
	AddOp           rules 67, 68
	MulOp           rules 69, 70, 71
	RelOp           rules 72, 73, 74, 75, 76, 77

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34
	%eof           reduce using rule 11

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Block          goto state 7
	ListStmt       goto state 8
	Stmt           goto state 9
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'and'          reduce using rule 1
	'or'           reduce using rule 1


State 3

	Stmt -> Ident . '=' Expr ';'                        (rule 16)
	Stmt -> Ident . '++' ';'                            (rule 17)
	Stmt -> Ident . '--' ';'                            (rule 18)
	Expr6 -> Ident .                                    (rule 41)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'('            shift, and enter state 67
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           shift, and enter state 68
	'-'            reduce using rule 41
	'--'           shift, and enter state 69
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            shift, and enter state 70
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'and'          reduce using rule 41
	'or'           reduce using rule 41


State 4

	Expr6 -> Integer .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'and'          reduce using rule 42
	'or'           reduce using rule 42


State 5

	Expr6 -> String .                                   (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	Stmt -> Block .                                     (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'any'          reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'fn'           reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'nil'          reduce using rule 14
	'not'          reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 8

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 9

	ListStmt -> Stmt . ListStmt                         (rule 12)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	'}'            reduce using rule 11
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34
	%eof           reduce using rule 11

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	ListStmt       goto state 66
	Stmt           goto state 9
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 10

	Stmt -> DeclKind .                                  (rule 15)

	'('            reduce using rule 15
	')'            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'any'          reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'fn'           reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'nil'          reduce using rule 15
	'not'          reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 11

	Expr5 -> Expr6 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52


State 12

	Expr4 -> Expr5 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'and'          reduce using rule 54
	'or'           reduce using rule 54


State 13

	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)
	Expr3 -> Expr4 .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 63
	')'            reduce using rule 56
	'*'            shift, and enter state 64
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 65
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56

	MulOp          goto state 62

State 14

	Expr3 -> Expr3 . AddOp Expr4                        (rule 55)
	Expr2 -> Expr3 .                                    (rule 58)

	'!='           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 60
	','            reduce using rule 58
	'-'            shift, and enter state 61
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'and'          reduce using rule 58
	'or'           reduce using rule 58

	AddOp          goto state 59

State 15

	Expr2 -> Expr2 . RelOp Expr3                        (rule 57)
	Expr1 -> Expr2 . 'and' Expr1                        (rule 59)
	Expr1 -> Expr2 .                                    (rule 60)

	'!='           shift, and enter state 52
	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'<'            shift, and enter state 53
	'<='           shift, and enter state 54
	'=='           shift, and enter state 55
	'>'            shift, and enter state 56
	'>='           shift, and enter state 57
	'and'          shift, and enter state 58
	'or'           reduce using rule 60

	RelOp          goto state 51

State 16

	Expr -> Expr1 . 'or' Expr                           (rule 61)
	Expr -> Expr1 .                                     (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63
	'or'           shift, and enter state 50


State 17

	Stmt -> Expr . ';'                                  (rule 25)

	';'            shift, and enter state 49


State 18

	Expr6 -> '(' . Expr ')'                             (rule 49)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 48

State 19

	Expr5 -> '-' . Expr6                                (rule 50)

	'('            shift, and enter state 18
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'nil'          shift, and enter state 26
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 47

State 20

	Stmt -> ';' .                                       (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'any'          reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'fn'           reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'nil'          reduce using rule 13
	'not'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 21

	Expr6 -> 'any' .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46


State 22

	Expr6 -> 'false' .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'and'          reduce using rule 44
	'or'           reduce using rule 44


State 23

	DeclKind -> 'fn' . Ident '(' ListArg ')' '->' Type Block    (rule 27)
	Expr -> 'fn' . '(' ListArg ')' '=>' Type Block      (rule 62)

	'('            shift, and enter state 46
	L_Ident        shift, and enter state 2

	Ident          goto state 45

State 24

	Stmt -> 'for' . '(' Stmt ';' Expr ';' Stmt ')' Block    (rule 24)

	'('            shift, and enter state 44


State 25

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 21)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 22)

	'('            shift, and enter state 43


State 26

	Expr6 -> 'nil' .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45


State 27

	Expr5 -> 'not' . Expr6                              (rule 51)

	'('            shift, and enter state 18
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'nil'          shift, and enter state 26
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 42

State 28

	Stmt -> 'return' . Expr ';'                         (rule 19)
	Stmt -> 'return' . ';'                              (rule 20)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 40
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 39

State 29

	Expr6 -> 'true' .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'and'          reduce using rule 43
	'or'           reduce using rule 43


State 30

	DeclKind -> 'var' . Ident ':' Type Item ';'         (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 37

State 31

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 23)

	'('            shift, and enter state 36


State 32

	Block -> '{' . ListStmt '}'                         (rule 10)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	'}'            reduce using rule 11
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	ListStmt       goto state 35
	Stmt           goto state 9
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 33

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'and'          reduce using rule 2
	'or'           reduce using rule 2


State 34

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'and'          reduce using rule 3
	'or'           reduce using rule 3


State 35

	Block -> '{' ListStmt . '}'                         (rule 10)

	'}'            shift, and enter state 92


State 36

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 23)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 91

State 37

	DeclKind -> 'var' Ident . ':' Type Item ';'         (rule 26)

	':'            shift, and enter state 90


State 38

	Expr6 -> Ident .                                    (rule 41)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'('            shift, and enter state 67
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'and'          reduce using rule 41
	'or'           reduce using rule 41


State 39

	Stmt -> 'return' Expr . ';'                         (rule 19)

	';'            shift, and enter state 89


State 40

	Stmt -> 'return' ';' .                              (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'any'          reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'fn'           reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'nil'          reduce using rule 20
	'not'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 41

	Expr -> 'fn' . '(' ListArg ')' '=>' Type Block      (rule 62)

	'('            shift, and enter state 46


State 42

	Expr5 -> 'not' Expr6 .                              (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51


State 43

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 21)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 22)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 88

State 44

	Stmt -> 'for' '(' . Stmt ';' Expr ';' Stmt ')' Block    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 87
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 45

	DeclKind -> 'fn' Ident . '(' ListArg ')' '->' Type Block    (rule 27)

	'('            shift, and enter state 86


State 46

	Expr -> 'fn' '(' . ListArg ')' '=>' Type Block      (rule 62)

	')'            reduce using rule 7
	'var'          shift, and enter state 85
	L_Ident        shift, and enter state 2

	Ident          goto state 82
	Arg            goto state 83
	ListArg        goto state 84

State 47

	Expr5 -> '-' Expr6 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50


State 48

	Expr6 -> '(' Expr . ')'                             (rule 49)

	')'            shift, and enter state 81


State 49

	Stmt -> Expr ';' .                                  (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'any'          reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'nil'          reduce using rule 25
	'not'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'var'          reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25
	%eof           reduce using rule 25


State 50

	Expr -> Expr1 'or' . Expr                           (rule 61)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 80

State 51

	Expr2 -> Expr2 RelOp . Expr3                        (rule 57)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 79

State 52

	RelOp -> '!=' .                                     (rule 77)

	'('            reduce using rule 77
	'-'            reduce using rule 77
	'any'          reduce using rule 77
	'false'        reduce using rule 77
	'nil'          reduce using rule 77
	'not'          reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 53

	RelOp -> '<' .                                      (rule 72)

	'('            reduce using rule 72
	'-'            reduce using rule 72
	'any'          reduce using rule 72
	'false'        reduce using rule 72
	'nil'          reduce using rule 72
	'not'          reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 54

	RelOp -> '<=' .                                     (rule 73)

	'('            reduce using rule 73
	'-'            reduce using rule 73
	'any'          reduce using rule 73
	'false'        reduce using rule 73
	'nil'          reduce using rule 73
	'not'          reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 55

	RelOp -> '==' .                                     (rule 76)

	'('            reduce using rule 76
	'-'            reduce using rule 76
	'any'          reduce using rule 76
	'false'        reduce using rule 76
	'nil'          reduce using rule 76
	'not'          reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 56

	RelOp -> '>' .                                      (rule 74)

	'('            reduce using rule 74
	'-'            reduce using rule 74
	'any'          reduce using rule 74
	'false'        reduce using rule 74
	'nil'          reduce using rule 74
	'not'          reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 57

	RelOp -> '>=' .                                     (rule 75)

	'('            reduce using rule 75
	'-'            reduce using rule 75
	'any'          reduce using rule 75
	'false'        reduce using rule 75
	'nil'          reduce using rule 75
	'not'          reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 58

	Expr1 -> Expr2 'and' . Expr1                        (rule 59)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 78

State 59

	Expr3 -> Expr3 AddOp . Expr4                        (rule 55)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 77

State 60

	AddOp -> '+' .                                      (rule 67)

	'('            reduce using rule 67
	'-'            reduce using rule 67
	'any'          reduce using rule 67
	'false'        reduce using rule 67
	'nil'          reduce using rule 67
	'not'          reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 61

	AddOp -> '-' .                                      (rule 68)

	'('            reduce using rule 68
	'-'            reduce using rule 68
	'any'          reduce using rule 68
	'false'        reduce using rule 68
	'nil'          reduce using rule 68
	'not'          reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 62

	Expr4 -> Expr4 MulOp . Expr5                        (rule 53)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 76

State 63

	MulOp -> '%' .                                      (rule 71)

	'('            reduce using rule 71
	'-'            reduce using rule 71
	'any'          reduce using rule 71
	'false'        reduce using rule 71
	'nil'          reduce using rule 71
	'not'          reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 64

	MulOp -> '*' .                                      (rule 69)

	'('            reduce using rule 69
	'-'            reduce using rule 69
	'any'          reduce using rule 69
	'false'        reduce using rule 69
	'nil'          reduce using rule 69
	'not'          reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 65

	MulOp -> '/' .                                      (rule 70)

	'('            reduce using rule 70
	'-'            reduce using rule 70
	'any'          reduce using rule 70
	'false'        reduce using rule 70
	'nil'          reduce using rule 70
	'not'          reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 66

	ListStmt -> Stmt ListStmt .                         (rule 12)

	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 67

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 47)

	'('            shift, and enter state 18
	')'            reduce using rule 64
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 74
	ListExpr       goto state 75

State 68

	Stmt -> Ident '++' . ';'                            (rule 17)

	';'            shift, and enter state 73


State 69

	Stmt -> Ident '--' . ';'                            (rule 18)

	';'            shift, and enter state 72


State 70

	Stmt -> Ident '=' . Expr ';'                        (rule 16)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 71

State 71

	Stmt -> Ident '=' Expr . ';'                        (rule 16)

	';'            shift, and enter state 110


State 72

	Stmt -> Ident '--' ';' .                            (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'any'          reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'fn'           reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'nil'          reduce using rule 18
	'not'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 73

	Stmt -> Ident '++' ';' .                            (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'any'          reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'fn'           reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'nil'          reduce using rule 17
	'not'          reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 74

	ListExpr -> Expr .                                  (rule 65)
	ListExpr -> Expr . ',' ListExpr                     (rule 66)

	')'            reduce using rule 65
	','            shift, and enter state 109


State 75

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 47)

	')'            shift, and enter state 108


State 76

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53


State 77

	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 63
	')'            reduce using rule 55
	'*'            shift, and enter state 64
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 65
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'and'          reduce using rule 55
	'or'           reduce using rule 55

	MulOp          goto state 62

State 78

	Expr1 -> Expr2 'and' Expr1 .                        (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'or'           reduce using rule 59


State 79

	Expr3 -> Expr3 . AddOp Expr4                        (rule 55)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 57)

	'!='           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 60
	','            reduce using rule 57
	'-'            shift, and enter state 61
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'and'          reduce using rule 57
	'or'           reduce using rule 57

	AddOp          goto state 59

State 80

	Expr -> Expr1 'or' Expr .                           (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61


State 81

	Expr6 -> '(' Expr ')' .                             (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49


State 82

	Arg -> Ident . ':' Type                             (rule 5)

	':'            shift, and enter state 107


State 83

	ListArg -> Arg .                                    (rule 8)
	ListArg -> Arg . ',' ListArg                        (rule 9)

	')'            reduce using rule 8
	','            shift, and enter state 106


State 84

	Expr -> 'fn' '(' ListArg . ')' '=>' Type Block      (rule 62)

	')'            shift, and enter state 105


State 85

	Arg -> 'var' . Ident ':' Type                       (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 104

State 86

	DeclKind -> 'fn' Ident '(' . ListArg ')' '->' Type Block    (rule 27)

	')'            reduce using rule 7
	'var'          shift, and enter state 85
	L_Ident        shift, and enter state 2

	Ident          goto state 82
	Arg            goto state 83
	ListArg        goto state 103

State 87

	Stmt -> 'for' '(' Stmt . ';' Expr ';' Stmt ')' Block    (rule 24)

	';'            shift, and enter state 102


State 88

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 21)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 22)

	')'            shift, and enter state 101


State 89

	Stmt -> 'return' Expr ';' .                         (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'any'          reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'fn'           reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'nil'          reduce using rule 19
	'not'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 90

	DeclKind -> 'var' Ident ':' . Type Item ';'         (rule 26)

	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 94

State 91

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 23)

	')'            shift, and enter state 93


State 92

	Block -> '{' ListStmt '}' .                         (rule 10)

	'('            reduce using rule 10
	')'            reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'any'          reduce using rule 10
	'else'         reduce using rule 10
	'false'        reduce using rule 10
	'fn'           reduce using rule 10
	'for'          reduce using rule 10
	'if'           reduce using rule 10
	'nil'          reduce using rule 10
	'not'          reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 93

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 23)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 122
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 94

	DeclKind -> 'var' Ident ':' Type . Item ';'         (rule 26)

	';'            reduce using rule 29
	'='            shift, and enter state 121

	Item           goto state 120

State 95

	Type -> 'any' .                                     (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'='            reduce using rule 36
	'{'            reduce using rule 36


State 96

	Type -> 'bool' .                                    (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'='            reduce using rule 33
	'{'            reduce using rule 33


State 97

	Type -> 'fn' . '(' ListType ')' '->' Type           (rule 37)

	'('            shift, and enter state 119


State 98

	Type -> 'int' .                                     (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	'='            reduce using rule 34
	'{'            reduce using rule 34


State 99

	Type -> 'nil' .                                     (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	'='            reduce using rule 32
	'{'            reduce using rule 32


State 100

	Type -> 'string' .                                  (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	'='            reduce using rule 35
	'{'            reduce using rule 35


State 101

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 21)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 22)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 118
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 102

	Stmt -> 'for' '(' Stmt ';' . Expr ';' Stmt ')' Block    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 117

State 103

	DeclKind -> 'fn' Ident '(' ListArg . ')' '->' Type Block    (rule 27)

	')'            shift, and enter state 116


State 104

	Arg -> 'var' Ident . ':' Type                       (rule 6)

	':'            shift, and enter state 115


State 105

	Expr -> 'fn' '(' ListArg ')' . '=>' Type Block      (rule 62)

	'=>'           shift, and enter state 114


State 106

	ListArg -> Arg ',' . ListArg                        (rule 9)

	')'            reduce using rule 7
	'var'          shift, and enter state 85
	L_Ident        shift, and enter state 2

	Ident          goto state 82
	Arg            goto state 83
	ListArg        goto state 113

State 107

	Arg -> Ident ':' . Type                             (rule 5)

	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 112

State 108

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47


State 109

	ListExpr -> Expr ',' . ListExpr                     (rule 66)

	'('            shift, and enter state 18
	')'            reduce using rule 64
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 74
	ListExpr       goto state 111

State 110

	Stmt -> Ident '=' Expr ';' .                        (rule 16)

	'('            reduce using rule 16
	')'            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'any'          reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'fn'           reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'nil'          reduce using rule 16
	'not'          reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 111

	ListExpr -> Expr ',' ListExpr .                     (rule 66)

	')'            reduce using rule 66


State 112

	Arg -> Ident ':' Type .                             (rule 5)

	')'            reduce using rule 5
	','            reduce using rule 5


State 113

	ListArg -> Arg ',' ListArg .                        (rule 9)

	')'            reduce using rule 9


State 114

	Expr -> 'fn' '(' ListArg ')' '=>' . Type Block      (rule 62)

	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 131

State 115

	Arg -> 'var' Ident ':' . Type                       (rule 6)

	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 130

State 116

	DeclKind -> 'fn' Ident '(' ListArg ')' . '->' Type Block    (rule 27)

	'->'           shift, and enter state 129


State 117

	Stmt -> 'for' '(' Stmt ';' Expr . ';' Stmt ')' Block    (rule 24)

	';'            shift, and enter state 128


State 118

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 21)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 22)

	'('            reduce using rule 21
	')'            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'any'          reduce using rule 21
	'else'         shift, and enter state 127
			(reduce using rule 21)

	'false'        reduce using rule 21
	'fn'           reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'nil'          reduce using rule 21
	'not'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 119

	Type -> 'fn' '(' . ListType ')' '->' Type           (rule 37)

	')'            reduce using rule 38
	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 125
	ListType       goto state 126

State 120

	DeclKind -> 'var' Ident ':' Type Item . ';'         (rule 26)

	';'            shift, and enter state 124


State 121

	Item -> '=' . Expr                                  (rule 28)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 41
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 38
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 123

State 122

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 23)

	'('            reduce using rule 23
	')'            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'any'          reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'nil'          reduce using rule 23
	'not'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	%eof           reduce using rule 23


State 123

	Item -> '=' Expr .                                  (rule 28)

	';'            reduce using rule 28


State 124

	DeclKind -> 'var' Ident ':' Type Item ';' .         (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'any'          reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'nil'          reduce using rule 26
	'not'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'var'          reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26
	%eof           reduce using rule 26


State 125

	ListType -> Type .                                  (rule 39)
	ListType -> Type . ',' ListType                     (rule 40)

	')'            reduce using rule 39
	','            shift, and enter state 137


State 126

	Type -> 'fn' '(' ListType . ')' '->' Type           (rule 37)

	')'            shift, and enter state 136


State 127

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 22)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 135
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 128

	Stmt -> 'for' '(' Stmt ';' Expr ';' . Stmt ')' Block    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'any'          shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'nil'          shift, and enter state 26
	'not'          shift, and enter state 27
	'return'       shift, and enter state 28
	'true'         shift, and enter state 29
	'var'          shift, and enter state 30
	'while'        shift, and enter state 31
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 33
	L_quoted       shift, and enter state 34

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 134
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 129

	DeclKind -> 'fn' Ident '(' ListArg ')' '->' . Type Block    (rule 27)

	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 133

State 130

	Arg -> 'var' Ident ':' Type .                       (rule 6)

	')'            reduce using rule 6
	','            reduce using rule 6


State 131

	Expr -> 'fn' '(' ListArg ')' '=>' Type . Block      (rule 62)

	'{'            shift, and enter state 32

	Block          goto state 132

State 132

	Expr -> 'fn' '(' ListArg ')' '=>' Type Block .      (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62


State 133

	DeclKind -> 'fn' Ident '(' ListArg ')' '->' Type . Block    (rule 27)

	'{'            shift, and enter state 32

	Block          goto state 141

State 134

	Stmt -> 'for' '(' Stmt ';' Expr ';' Stmt . ')' Block    (rule 24)

	')'            shift, and enter state 140


State 135

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'any'          reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'nil'          reduce using rule 22
	'not'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 136

	Type -> 'fn' '(' ListType ')' . '->' Type           (rule 37)

	'->'           shift, and enter state 139


State 137

	ListType -> Type ',' . ListType                     (rule 40)

	')'            reduce using rule 38
	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 125
	ListType       goto state 138

State 138

	ListType -> Type ',' ListType .                     (rule 40)

	')'            reduce using rule 40


State 139

	Type -> 'fn' '(' ListType ')' '->' . Type           (rule 37)

	'any'          shift, and enter state 95
	'bool'         shift, and enter state 96
	'fn'           shift, and enter state 97
	'int'          shift, and enter state 98
	'nil'          shift, and enter state 99
	'string'       shift, and enter state 100

	Type           goto state 143

State 140

	Stmt -> 'for' '(' Stmt ';' Expr ';' Stmt ')' . Block    (rule 24)

	'{'            shift, and enter state 32

	Block          goto state 142

State 141

	DeclKind -> 'fn' Ident '(' ListArg ')' '->' Type Block .    (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'any'          reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'fn'           reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'nil'          reduce using rule 27
	'not'          reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27
	%eof           reduce using rule 27


State 142

	Stmt -> 'for' '(' Stmt ';' Expr ';' Stmt ')' Block .    (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'any'          reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'nil'          reduce using rule 24
	'not'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'var'          reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24
	%eof           reduce using rule 24


State 143

	Type -> 'fn' '(' ListType ')' '->' Type .           (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'='            reduce using rule 37
	'{'            reduce using rule 37


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 78
Number of terminals: 43
Number of non-terminals: 26
Number of states: 144
