-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Grammar/Par.y
-----------------------------------------------------------------------------

state 122 contains 1 shift/reduce conflicts.

rule 30 is unused
rule 31 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Arg -> Ident ':' Type                              (5)
	Arg -> 'var' Ident ':' Type                        (6)
	ListArg ->                                         (7)
	ListArg -> Arg                                     (8)
	ListArg -> Arg ',' ListArg                         (9)
	Block -> '{' ListStmt '}'                          (10)
	ListStmt ->                                        (11)
	ListStmt -> Stmt ListStmt                          (12)
	Stmt -> ';'                                        (13)
	Stmt -> Block                                      (14)
	Stmt -> DeclKind                                   (15)
	Stmt -> Ident '=' Expr ';'                         (16)
	Stmt -> Ident '++' ';'                             (17)
	Stmt -> Ident '--' ';'                             (18)
	Stmt -> 'return' Expr ';'                          (19)
	Stmt -> 'return' ';'                               (20)
	Stmt -> 'if' '(' Expr ')' Stmt                     (21)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (22)
	Stmt -> 'while' '(' Expr ')' Stmt                  (23)
	Stmt -> 'for' '(' Ident '=' Expr ';' Expr ';' Expr ')' Stmt   (24)
	Stmt -> Expr ';'                                   (25)
	DeclKind -> 'var' Ident ':' Type Item ';'          (26)
	DeclKind -> 'fn' Ident '(' ListArg ')' '->' Type Block   (27)
	Item -> '=' Expr                                   (28)
	Item ->                                            (29)
	ListItem -> Item                                   (30)
	ListItem -> Item ',' ListItem                      (31)
	Type -> 'nil'                                      (32)
	Type -> 'bool'                                     (33)
	Type -> 'int'                                      (34)
	Type -> 'string'                                   (35)
	Type -> 'fn' '(' ListType ')' '->' Type            (36)
	ListType ->                                        (37)
	ListType -> Type                                   (38)
	ListType -> Type ',' ListType                      (39)
	Expr6 -> Ident                                     (40)
	Expr6 -> Integer                                   (41)
	Expr6 -> 'true'                                    (42)
	Expr6 -> 'false'                                   (43)
	Expr6 -> String                                    (44)
	Expr6 -> Ident '(' ListExpr ')'                    (45)
	Expr6 -> '[' Expr ']' '(' ListExpr ')'             (46)
	Expr6 -> '(' Expr ')'                              (47)
	Expr5 -> '-' Expr6                                 (48)
	Expr5 -> 'not' Expr6                               (49)
	Expr5 -> Expr6                                     (50)
	Expr4 -> Expr4 MulOp Expr5                         (51)
	Expr4 -> Expr5                                     (52)
	Expr3 -> Expr3 AddOp Expr4                         (53)
	Expr3 -> Expr4                                     (54)
	Expr2 -> Expr2 RelOp Expr3                         (55)
	Expr2 -> Expr3                                     (56)
	Expr1 -> Expr2 'and' Expr1                         (57)
	Expr1 -> Expr2                                     (58)
	Expr -> Expr1 'or' Expr                            (59)
	Expr -> '(' ListArg ')' '=>' Type Block            (60)
	Expr -> Expr1                                      (61)
	ListExpr ->                                        (62)
	ListExpr -> Expr                                   (63)
	ListExpr -> Expr ',' ListExpr                      (64)
	AddOp -> '+'                                       (65)
	AddOp -> '-'                                       (66)
	MulOp -> '*'                                       (67)
	MulOp -> '/'                                       (68)
	MulOp -> '%'                                       (69)
	RelOp -> '<'                                       (70)
	RelOp -> '<='                                      (71)
	RelOp -> '>'                                       (72)
	RelOp -> '>='                                      (73)
	RelOp -> '=='                                      (74)
	RelOp -> '!='                                      (75)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	'++'           { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'--'           { PT _ (TS _ 10) }
	'->'           { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	':'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'=>'           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'['            { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	'and'          { PT _ (TS _ 24) }
	'bool'         { PT _ (TS _ 25) }
	'else'         { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'fn'           { PT _ (TS _ 28) }
	'for'          { PT _ (TS _ 29) }
	'if'           { PT _ (TS _ 30) }
	'int'          { PT _ (TS _ 31) }
	'nil'          { PT _ (TS _ 32) }
	'not'          { PT _ (TS _ 33) }
	'or'           { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'string'       { PT _ (TS _ 36) }
	'true'         { PT _ (TS _ 37) }
	'var'          { PT _ (TS _ 38) }
	'while'        { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'}'            { PT _ (TS _ 41) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Arg             rules 5, 6
	ListArg         rules 7, 8, 9
	Block           rule  10
	ListStmt        rules 11, 12
	Stmt            rules 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	DeclKind        rules 26, 27
	Item            rules 28, 29
	ListItem        rules 30, 31
	Type            rules 32, 33, 34, 35, 36
	ListType        rules 37, 38, 39
	Expr6           rules 40, 41, 42, 43, 44, 45, 46, 47
	Expr5           rules 48, 49, 50
	Expr4           rules 51, 52
	Expr3           rules 53, 54
	Expr2           rules 55, 56
	Expr1           rules 57, 58
	Expr            rules 59, 60, 61
	ListExpr        rules 62, 63, 64
	AddOp           rules 65, 66
	MulOp           rules 67, 68, 69
	RelOp           rules 70, 71, 72, 73, 74, 75

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33
	%eof           reduce using rule 11

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Block          goto state 7
	ListStmt       goto state 8
	Stmt           goto state 9
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	']'            reduce using rule 1
	'and'          reduce using rule 1
	'or'           reduce using rule 1


State 3

	Stmt -> Ident . '=' Expr ';'                        (rule 16)
	Stmt -> Ident . '++' ';'                            (rule 17)
	Stmt -> Ident . '--' ';'                            (rule 18)
	Expr6 -> Ident .                                    (rule 40)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 45)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'('            shift, and enter state 70
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           shift, and enter state 71
	'-'            reduce using rule 40
	'--'           shift, and enter state 72
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            shift, and enter state 73
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'and'          reduce using rule 40
	'or'           reduce using rule 40


State 4

	Expr6 -> Integer .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'and'          reduce using rule 41
	'or'           reduce using rule 41


State 5

	Expr6 -> String .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'and'          reduce using rule 44
	'or'           reduce using rule 44


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	Stmt -> Block .                                     (rule 14)

	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'['            reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'fn'           reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'not'          reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 8

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 9

	ListStmt -> Stmt . ListStmt                         (rule 12)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	'}'            reduce using rule 11
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33
	%eof           reduce using rule 11

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	ListStmt       goto state 69
	Stmt           goto state 9
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 10

	Stmt -> DeclKind .                                  (rule 15)

	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'['            reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'fn'           reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'not'          reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 11

	Expr5 -> Expr6 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50


State 12

	Expr4 -> Expr5 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52


State 13

	Expr4 -> Expr4 . MulOp Expr5                        (rule 51)
	Expr3 -> Expr4 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            shift, and enter state 66
	')'            reduce using rule 54
	'*'            shift, and enter state 67
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            shift, and enter state 68
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'and'          reduce using rule 54
	'or'           reduce using rule 54

	MulOp          goto state 65

State 14

	Expr3 -> Expr3 . AddOp Expr4                        (rule 53)
	Expr2 -> Expr3 .                                    (rule 56)

	'!='           reduce using rule 56
	')'            reduce using rule 56
	'+'            shift, and enter state 63
	','            reduce using rule 56
	'-'            shift, and enter state 64
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56

	AddOp          goto state 62

State 15

	Expr2 -> Expr2 . RelOp Expr3                        (rule 55)
	Expr1 -> Expr2 . 'and' Expr1                        (rule 57)
	Expr1 -> Expr2 .                                    (rule 58)

	'!='           shift, and enter state 55
	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'<'            shift, and enter state 56
	'<='           shift, and enter state 57
	'=='           shift, and enter state 58
	'>'            shift, and enter state 59
	'>='           shift, and enter state 60
	']'            reduce using rule 58
	'and'          shift, and enter state 61
	'or'           reduce using rule 58

	RelOp          goto state 54

State 16

	Expr -> Expr1 . 'or' Expr                           (rule 59)
	Expr -> Expr1 .                                     (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	']'            reduce using rule 61
	'or'           shift, and enter state 53


State 17

	Stmt -> Expr . ';'                                  (rule 25)

	';'            shift, and enter state 52


State 18

	Expr6 -> '(' . Expr ')'                             (rule 47)
	Expr -> '(' . ListArg ')' '=>' Type Block           (rule 60)

	'('            shift, and enter state 18
	')'            reduce using rule 7
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	'var'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 47
	Integer        goto state 4
	String         goto state 5
	Arg            goto state 48
	ListArg        goto state 49
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 50

State 19

	Expr5 -> '-' . Expr6                                (rule 48)

	'('            shift, and enter state 41
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 46

State 20

	Stmt -> ';' .                                       (rule 13)

	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'['            reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'fn'           reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'not'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 21

	Expr6 -> '[' . Expr ']' '(' ListExpr ')'            (rule 46)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 45

State 22

	Expr6 -> 'false' .                                  (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'and'          reduce using rule 43
	'or'           reduce using rule 43


State 23

	DeclKind -> 'fn' . Ident '(' ListArg ')' '->' Type Block    (rule 27)

	L_Ident        shift, and enter state 2

	Ident          goto state 44

State 24

	Stmt -> 'for' . '(' Ident '=' Expr ';' Expr ';' Expr ')' Stmt    (rule 24)

	'('            shift, and enter state 43


State 25

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 21)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 22)

	'('            shift, and enter state 42


State 26

	Expr5 -> 'not' . Expr6                              (rule 49)

	'('            shift, and enter state 41
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 40

State 27

	Stmt -> 'return' . Expr ';'                         (rule 19)
	Stmt -> 'return' . ';'                              (rule 20)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 39
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 38

State 28

	Expr6 -> 'true' .                                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'and'          reduce using rule 42
	'or'           reduce using rule 42


State 29

	DeclKind -> 'var' . Ident ':' Type Item ';'         (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 36

State 30

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 23)

	'('            shift, and enter state 35


State 31

	Block -> '{' . ListStmt '}'                         (rule 10)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	'}'            reduce using rule 11
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	ListStmt       goto state 34
	Stmt           goto state 9
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 32

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'and'          reduce using rule 2
	'or'           reduce using rule 2


State 33

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'and'          reduce using rule 3
	'or'           reduce using rule 3


State 34

	Block -> '{' ListStmt . '}'                         (rule 10)

	'}'            shift, and enter state 96


State 35

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 23)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 95

State 36

	DeclKind -> 'var' Ident . ':' Type Item ';'         (rule 26)

	':'            shift, and enter state 94


State 37

	Expr6 -> Ident .                                    (rule 40)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 45)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'('            shift, and enter state 70
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'and'          reduce using rule 40
	'or'           reduce using rule 40


State 38

	Stmt -> 'return' Expr . ';'                         (rule 19)

	';'            shift, and enter state 93


State 39

	Stmt -> 'return' ';' .                              (rule 20)

	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'['            reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'fn'           reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'not'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 40

	Expr5 -> 'not' Expr6 .                              (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49


State 41

	Expr6 -> '(' . Expr ')'                             (rule 47)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 50

State 42

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 21)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 22)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 92

State 43

	Stmt -> 'for' '(' . Ident '=' Expr ';' Expr ';' Expr ')' Stmt    (rule 24)

	L_Ident        shift, and enter state 2

	Ident          goto state 91

State 44

	DeclKind -> 'fn' Ident . '(' ListArg ')' '->' Type Block    (rule 27)

	'('            shift, and enter state 90


State 45

	Expr6 -> '[' Expr . ']' '(' ListExpr ')'            (rule 46)

	']'            shift, and enter state 89


State 46

	Expr5 -> '-' Expr6 .                                (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48


State 47

	Arg -> Ident . ':' Type                             (rule 5)
	Expr6 -> Ident .                                    (rule 40)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 45)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'('            shift, and enter state 70
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	':'            shift, and enter state 88
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'and'          reduce using rule 40
	'or'           reduce using rule 40


State 48

	ListArg -> Arg .                                    (rule 8)
	ListArg -> Arg . ',' ListArg                        (rule 9)

	')'            reduce using rule 8
	','            shift, and enter state 87


State 49

	Expr -> '(' ListArg . ')' '=>' Type Block           (rule 60)

	')'            shift, and enter state 86


State 50

	Expr6 -> '(' Expr . ')'                             (rule 47)

	')'            shift, and enter state 85


State 51

	Arg -> 'var' . Ident ':' Type                       (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 84

State 52

	Stmt -> Expr ';' .                                  (rule 25)

	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'['            reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'not'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'var'          reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25
	%eof           reduce using rule 25


State 53

	Expr -> Expr1 'or' . Expr                           (rule 59)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 83

State 54

	Expr2 -> Expr2 RelOp . Expr3                        (rule 55)

	'('            shift, and enter state 41
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 82

State 55

	RelOp -> '!=' .                                     (rule 75)

	'('            reduce using rule 75
	'-'            reduce using rule 75
	'['            reduce using rule 75
	'false'        reduce using rule 75
	'not'          reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 56

	RelOp -> '<' .                                      (rule 70)

	'('            reduce using rule 70
	'-'            reduce using rule 70
	'['            reduce using rule 70
	'false'        reduce using rule 70
	'not'          reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 57

	RelOp -> '<=' .                                     (rule 71)

	'('            reduce using rule 71
	'-'            reduce using rule 71
	'['            reduce using rule 71
	'false'        reduce using rule 71
	'not'          reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 58

	RelOp -> '==' .                                     (rule 74)

	'('            reduce using rule 74
	'-'            reduce using rule 74
	'['            reduce using rule 74
	'false'        reduce using rule 74
	'not'          reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 59

	RelOp -> '>' .                                      (rule 72)

	'('            reduce using rule 72
	'-'            reduce using rule 72
	'['            reduce using rule 72
	'false'        reduce using rule 72
	'not'          reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 60

	RelOp -> '>=' .                                     (rule 73)

	'('            reduce using rule 73
	'-'            reduce using rule 73
	'['            reduce using rule 73
	'false'        reduce using rule 73
	'not'          reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 61

	Expr1 -> Expr2 'and' . Expr1                        (rule 57)

	'('            shift, and enter state 41
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 81

State 62

	Expr3 -> Expr3 AddOp . Expr4                        (rule 53)

	'('            shift, and enter state 41
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 80

State 63

	AddOp -> '+' .                                      (rule 65)

	'('            reduce using rule 65
	'-'            reduce using rule 65
	'['            reduce using rule 65
	'false'        reduce using rule 65
	'not'          reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 64

	AddOp -> '-' .                                      (rule 66)

	'('            reduce using rule 66
	'-'            reduce using rule 66
	'['            reduce using rule 66
	'false'        reduce using rule 66
	'not'          reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 65

	Expr4 -> Expr4 MulOp . Expr5                        (rule 51)

	'('            shift, and enter state 41
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 79

State 66

	MulOp -> '%' .                                      (rule 69)

	'('            reduce using rule 69
	'-'            reduce using rule 69
	'['            reduce using rule 69
	'false'        reduce using rule 69
	'not'          reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 67

	MulOp -> '*' .                                      (rule 67)

	'('            reduce using rule 67
	'-'            reduce using rule 67
	'['            reduce using rule 67
	'false'        reduce using rule 67
	'not'          reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 68

	MulOp -> '/' .                                      (rule 68)

	'('            reduce using rule 68
	'-'            reduce using rule 68
	'['            reduce using rule 68
	'false'        reduce using rule 68
	'not'          reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 69

	ListStmt -> Stmt ListStmt .                         (rule 12)

	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 70

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 45)

	'('            shift, and enter state 18
	')'            reduce using rule 62
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 77
	ListExpr       goto state 78

State 71

	Stmt -> Ident '++' . ';'                            (rule 17)

	';'            shift, and enter state 76


State 72

	Stmt -> Ident '--' . ';'                            (rule 18)

	';'            shift, and enter state 75


State 73

	Stmt -> Ident '=' . Expr ';'                        (rule 16)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 74

State 74

	Stmt -> Ident '=' Expr . ';'                        (rule 16)

	';'            shift, and enter state 115


State 75

	Stmt -> Ident '--' ';' .                            (rule 18)

	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'['            reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'fn'           reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'not'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 76

	Stmt -> Ident '++' ';' .                            (rule 17)

	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'['            reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'fn'           reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'not'          reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 77

	ListExpr -> Expr .                                  (rule 63)
	ListExpr -> Expr . ',' ListExpr                     (rule 64)

	')'            reduce using rule 63
	','            shift, and enter state 114


State 78

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 45)

	')'            shift, and enter state 113


State 79

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51


State 80

	Expr4 -> Expr4 . MulOp Expr5                        (rule 51)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 53)

	'!='           reduce using rule 53
	'%'            shift, and enter state 66
	')'            reduce using rule 53
	'*'            shift, and enter state 67
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 68
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53

	MulOp          goto state 65

State 81

	Expr1 -> Expr2 'and' Expr1 .                        (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'or'           reduce using rule 57


State 82

	Expr3 -> Expr3 . AddOp Expr4                        (rule 53)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 55)

	'!='           reduce using rule 55
	')'            reduce using rule 55
	'+'            shift, and enter state 63
	','            reduce using rule 55
	'-'            shift, and enter state 64
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'and'          reduce using rule 55
	'or'           reduce using rule 55

	AddOp          goto state 62

State 83

	Expr -> Expr1 'or' Expr .                           (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	']'            reduce using rule 59


State 84

	Arg -> 'var' Ident . ':' Type                       (rule 6)

	':'            shift, and enter state 112


State 85

	Expr6 -> '(' Expr ')' .                             (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47


State 86

	Expr -> '(' ListArg ')' . '=>' Type Block           (rule 60)

	'=>'           shift, and enter state 111


State 87

	ListArg -> Arg ',' . ListArg                        (rule 9)

	')'            reduce using rule 7
	'var'          shift, and enter state 51
	L_Ident        shift, and enter state 2

	Ident          goto state 106
	Arg            goto state 48
	ListArg        goto state 110

State 88

	Arg -> Ident ':' . Type                             (rule 5)

	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 109

State 89

	Expr6 -> '[' Expr ']' . '(' ListExpr ')'            (rule 46)

	'('            shift, and enter state 108


State 90

	DeclKind -> 'fn' Ident '(' . ListArg ')' '->' Type Block    (rule 27)

	')'            reduce using rule 7
	'var'          shift, and enter state 51
	L_Ident        shift, and enter state 2

	Ident          goto state 106
	Arg            goto state 48
	ListArg        goto state 107

State 91

	Stmt -> 'for' '(' Ident . '=' Expr ';' Expr ';' Expr ')' Stmt    (rule 24)

	'='            shift, and enter state 105


State 92

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 21)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 22)

	')'            shift, and enter state 104


State 93

	Stmt -> 'return' Expr ';' .                         (rule 19)

	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'['            reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'fn'           reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'not'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 94

	DeclKind -> 'var' Ident ':' . Type Item ';'         (rule 26)

	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 98

State 95

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 23)

	')'            shift, and enter state 97


State 96

	Block -> '{' ListStmt '}' .                         (rule 10)

	'('            reduce using rule 10
	')'            reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'['            reduce using rule 10
	']'            reduce using rule 10
	'else'         reduce using rule 10
	'false'        reduce using rule 10
	'fn'           reduce using rule 10
	'for'          reduce using rule 10
	'if'           reduce using rule 10
	'not'          reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 97

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 23)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 126
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 98

	DeclKind -> 'var' Ident ':' Type . Item ';'         (rule 26)

	';'            reduce using rule 29
	'='            shift, and enter state 125

	Item           goto state 124

State 99

	Type -> 'bool' .                                    (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'='            reduce using rule 33
	'{'            reduce using rule 33


State 100

	Type -> 'fn' . '(' ListType ')' '->' Type           (rule 36)

	'('            shift, and enter state 123


State 101

	Type -> 'int' .                                     (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	'='            reduce using rule 34
	'{'            reduce using rule 34


State 102

	Type -> 'nil' .                                     (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	'='            reduce using rule 32
	'{'            reduce using rule 32


State 103

	Type -> 'string' .                                  (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	'='            reduce using rule 35
	'{'            reduce using rule 35


State 104

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 21)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 22)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 122
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 105

	Stmt -> 'for' '(' Ident '=' . Expr ';' Expr ';' Expr ')' Stmt    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 121

State 106

	Arg -> Ident . ':' Type                             (rule 5)

	':'            shift, and enter state 88


State 107

	DeclKind -> 'fn' Ident '(' ListArg . ')' '->' Type Block    (rule 27)

	')'            shift, and enter state 120


State 108

	Expr6 -> '[' Expr ']' '(' . ListExpr ')'            (rule 46)

	'('            shift, and enter state 18
	')'            reduce using rule 62
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 77
	ListExpr       goto state 119

State 109

	Arg -> Ident ':' Type .                             (rule 5)

	')'            reduce using rule 5
	','            reduce using rule 5


State 110

	ListArg -> Arg ',' ListArg .                        (rule 9)

	')'            reduce using rule 9


State 111

	Expr -> '(' ListArg ')' '=>' . Type Block           (rule 60)

	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 118

State 112

	Arg -> 'var' Ident ':' . Type                       (rule 6)

	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 117

State 113

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45


State 114

	ListExpr -> Expr ',' . ListExpr                     (rule 64)

	'('            shift, and enter state 18
	')'            reduce using rule 62
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 77
	ListExpr       goto state 116

State 115

	Stmt -> Ident '=' Expr ';' .                        (rule 16)

	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'['            reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'fn'           reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'not'          reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 116

	ListExpr -> Expr ',' ListExpr .                     (rule 64)

	')'            reduce using rule 64


State 117

	Arg -> 'var' Ident ':' Type .                       (rule 6)

	')'            reduce using rule 6
	','            reduce using rule 6


State 118

	Expr -> '(' ListArg ')' '=>' Type . Block           (rule 60)

	'{'            shift, and enter state 31

	Block          goto state 135

State 119

	Expr6 -> '[' Expr ']' '(' ListExpr . ')'            (rule 46)

	')'            shift, and enter state 134


State 120

	DeclKind -> 'fn' Ident '(' ListArg ')' . '->' Type Block    (rule 27)

	'->'           shift, and enter state 133


State 121

	Stmt -> 'for' '(' Ident '=' Expr . ';' Expr ';' Expr ')' Stmt    (rule 24)

	';'            shift, and enter state 132


State 122

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 21)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 22)

	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'['            reduce using rule 21
	'else'         shift, and enter state 131
			(reduce using rule 21)

	'false'        reduce using rule 21
	'fn'           reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'not'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 123

	Type -> 'fn' '(' . ListType ')' '->' Type           (rule 36)

	')'            reduce using rule 37
	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 129
	ListType       goto state 130

State 124

	DeclKind -> 'var' Ident ':' Type Item . ';'         (rule 26)

	';'            shift, and enter state 128


State 125

	Item -> '=' . Expr                                  (rule 28)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 127

State 126

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 23)

	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'['            reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'not'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	%eof           reduce using rule 23


State 127

	Item -> '=' Expr .                                  (rule 28)

	';'            reduce using rule 28


State 128

	DeclKind -> 'var' Ident ':' Type Item ';' .         (rule 26)

	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'['            reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'not'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'var'          reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26
	%eof           reduce using rule 26


State 129

	ListType -> Type .                                  (rule 38)
	ListType -> Type . ',' ListType                     (rule 39)

	')'            reduce using rule 38
	','            shift, and enter state 140


State 130

	Type -> 'fn' '(' ListType . ')' '->' Type           (rule 36)

	')'            shift, and enter state 139


State 131

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 22)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 138
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 132

	Stmt -> 'for' '(' Ident '=' Expr ';' . Expr ';' Expr ')' Stmt    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 137

State 133

	DeclKind -> 'fn' Ident '(' ListArg ')' '->' . Type Block    (rule 27)

	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 136

State 134

	Expr6 -> '[' Expr ']' '(' ListExpr ')' .            (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46


State 135

	Expr -> '(' ListArg ')' '=>' Type Block .           (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	']'            reduce using rule 60


State 136

	DeclKind -> 'fn' Ident '(' ListArg ')' '->' Type . Block    (rule 27)

	'{'            shift, and enter state 31

	Block          goto state 144

State 137

	Stmt -> 'for' '(' Ident '=' Expr ';' Expr . ';' Expr ')' Stmt    (rule 24)

	';'            shift, and enter state 143


State 138

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 22)

	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'['            reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'not'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 139

	Type -> 'fn' '(' ListType ')' . '->' Type           (rule 36)

	'->'           shift, and enter state 142


State 140

	ListType -> Type ',' . ListType                     (rule 39)

	')'            reduce using rule 37
	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 129
	ListType       goto state 141

State 141

	ListType -> Type ',' ListType .                     (rule 39)

	')'            reduce using rule 39


State 142

	Type -> 'fn' '(' ListType ')' '->' . Type           (rule 36)

	'bool'         shift, and enter state 99
	'fn'           shift, and enter state 100
	'int'          shift, and enter state 101
	'nil'          shift, and enter state 102
	'string'       shift, and enter state 103

	Type           goto state 146

State 143

	Stmt -> 'for' '(' Ident '=' Expr ';' Expr ';' . Expr ')' Stmt    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 26
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 37
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 145

State 144

	DeclKind -> 'fn' Ident '(' ListArg ')' '->' Type Block .    (rule 27)

	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'['            reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'fn'           reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'not'          reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27
	%eof           reduce using rule 27


State 145

	Stmt -> 'for' '(' Ident '=' Expr ';' Expr ';' Expr . ')' Stmt    (rule 24)

	')'            shift, and enter state 147


State 146

	Type -> 'fn' '(' ListType ')' '->' Type .           (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'='            reduce using rule 36
	'{'            reduce using rule 36


State 147

	Stmt -> 'for' '(' Ident '=' Expr ';' Expr ';' Expr ')' . Stmt    (rule 24)

	'('            shift, and enter state 18
	'-'            shift, and enter state 19
	';'            shift, and enter state 20
	'['            shift, and enter state 21
	'false'        shift, and enter state 22
	'fn'           shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'not'          shift, and enter state 26
	'return'       shift, and enter state 27
	'true'         shift, and enter state 28
	'var'          shift, and enter state 29
	'while'        shift, and enter state 30
	'{'            shift, and enter state 31
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 33

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 148
	DeclKind       goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 148

	Stmt -> 'for' '(' Ident '=' Expr ';' Expr ';' Expr ')' Stmt .    (rule 24)

	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'['            reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'not'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'var'          reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24
	%eof           reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 76
Number of terminals: 44
Number of non-terminals: 26
Number of states: 149
